{
  "openapi": "3.1.0",
  "info": {
    "title": "AKB",
    "version": "0.1.17"
  },
  "paths": {
    "/auth": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "summary": "Login",
        "operationId": "login_auth_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_login_auth_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Token"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "example": {
                  "message": "Произошла внутренняя ошибка сервиса. Пожалуйста, обратитесь к администрации ",
                  "error_key": "internal_server_error"
                }
              }
            }
          }
        }
      }
    },
    "/users/registration": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Зарегистрироваться. Шаг регистрации 1.",
        "description": "Метод реализует базовый механизм регистрации в сервисе. При вызове метода на почту пользователя направляется письмо с дальнейшей инструкцией по регистрации. Актуально только для поэтапной регистрации.",
        "operationId": "create_user_users_registration_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUser"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "example": {
                  "message": "Произошла внутренняя ошибка сервиса. Пожалуйста, обратитесь к администрации ",
                  "error_key": "internal_server_error"
                }
              }
            }
          }
        }
      }
    },
    "/users/registration/inn_info": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Получить информацию пользователя по ИНН. Шаг регистрации 2. Доступно, только если пользователь не имеет сохраненного ИНН в ЛК.",
        "description": "Метод реализует второй шаг регистрации в сервисе. При вызове метода в БРН происходит инициализация карточки клиента с базовой информацией по нему. Актуально только для поэтапной регистрации.",
        "operationId": "get_inn_info_users_registration_inn_info_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "inn",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ИНН пользователя",
              "title": "Inn"
            },
            "description": "ИНН пользователя"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InnInfo"
                }
              }
            }
          },
          "404": {
            "description": "Не найдено",
            "content": {
              "application/json": {
                "example": {
                  "message": "По ИНН: {inn} не получены реквизиты из сервиса",
                  "error_key": "inn_not_found"
                }
              }
            }
          },
          "409": {
            "description": "Конфликт",
            "content": {
              "application/json": {
                "example": {
                  "possible_exceptions": [
                    {
                      "message": "Пользователь с ИНН {inn} уже зарегистрирован.",
                      "error_key": "users_conflict"
                    },
                    {
                      "message": "Пользователь {curr_u.email} уже имеет сохраненный ИНН в ЛК.",
                      "error_key": "user_inn_conflict"
                    }
                  ]
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "example": {
                  "message": "Произошла внутренняя ошибка сервиса. Пожалуйста, обратитесь к администрации ",
                  "error_key": "internal_server_error"
                }
              }
            }
          },
          "503": {
            "description": "Сервис недоступен",
            "content": {
              "application/json": {
                "example": {
                  "message": "Сервис заполнения по ИНН недоступен",
                  "error_key": "inn_service_not_available"
                }
              }
            }
          }
        }
      }
    },
    "/users/registration/tax_info": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Сохранить налоговую информацию по пользователю. Шаг регистрации 3. Доступно, только если пользователь не имеет сохраненного ИНН в ЛК.",
        "description": "Метод реализует третий шаг регистрации в сервисе. При вызове метода в БРН сохраняется необходимая информация для дальнейшей работы сервиса. Актуально только для поэтапной регистрации.",
        "operationId": "save_tax_info_users_registration_tax_info_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/InnInfoToSave"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "example": {
                  "message": "Произошла внутренняя ошибка сервиса. Пожалуйста, обратитесь к администрации ",
                  "error_key": "internal_server_error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/users/registration/lead_info": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Сохранить лида по пользователю. Альтернативный шаг регистрации 3. Метод нужен для сохранения лида пользователя, который не проходит по СНО.",
        "description": "Метод реализует альтернативный шаг регистрации в сервисе. При вызове метода в БРН сохраняется информация по лиду пользователя. Дальнейшая работа в сервисе не предусмотрена, после сохранения лида вся функциональность сервиса становится недоступной. Актуально только для поэтапной регистрации.",
        "operationId": "save_lead_info_users_registration_lead_info_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LeadInfoToSave"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "Не найдено",
            "content": {
              "application/json": {
                "example": {
                  "message": "По ИНН не получены реквизиты из сервиса",
                  "error_key": "inn_not_found"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "example": {
                  "message": "Произошла внутренняя ошибка сервиса. Пожалуйста, обратитесь к администрации ",
                  "error_key": "internal_server_error"
                }
              }
            }
          },
          "503": {
            "description": "Сервис недоступен",
            "content": {
              "application/json": {
                "example": {
                  "message": "Сервис заполнения по ИНН недоступен",
                  "error_key": "inn_service_not_available"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/users": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Получить текущего пользователя",
        "description": "Метод возвращает информацию по зарегистрированному пользователю. Данный должен вызываться после каждой авторизации пользователя, а также при открытии страницы сервиса впервые при запуске сервиса.",
        "operationId": "current_user_users_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "example": {
                  "message": "Произошла внутренняя ошибка сервиса. Пожалуйста, обратитесь к администрации ",
                  "error_key": "internal_server_error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/users/lead": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Сохранить лида по пользователю",
        "description": "Метод реализует сохранение лида по пользователю, использующему сервис.",
        "operationId": "save_user_lead_users_lead_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserLead"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "example": {
                  "message": "Произошла внутренняя ошибка сервиса. Пожалуйста, обратитесь к администрации ",
                  "error_key": "internal_server_error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/users/change_tax": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Изменение настроек системы налогообложения ",
        "description": "Метод реализует изменение настроен СНО пользователя.",
        "operationId": "change_tax_users_change_tax_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeTax"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Неподдерживаемый контент",
            "content": {
              "application/json": {
                "example": {
                  "message": "Некорректный период учетной политики: {year}",
                  "error_key": "invalid_year"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "example": {
                  "message": "Произошла внутренняя ошибка сервиса. Пожалуйста, обратитесь к администрации ",
                  "error_key": "internal_server_error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/users/disable": {
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Отключить текущего пользователя от сервиса бухгалтерии",
        "description": "Метод реализует отключение пользователя от сервиса бухгалтерии. Повторное подключение сервиса реализуется через повторную регистрацию.",
        "operationId": "disable_user_users_disable_put",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "example": {
                  "message": "Произошла внутренняя ошибка сервиса. Пожалуйста, обратитесь к администрации ",
                  "error_key": "internal_server_error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/sources": {
      "get": {
        "tags": [
          "Sources"
        ],
        "summary": "Получить информацию о подключенных счетах, макретплейсах и ОФД пользователя",
        "description": "Метод возвращает информацию об источниках данных пользователя. Данный метод следует вызывать при открытии страниц, содержащих информацию об источниках пользователя. В источниках в том числе возвращаются те, что в данный момент находятся в обработке системой (например, недавно добавленные счета). Также метод возвращает информацию по клиенту на тот случай, если информация, получаемая по ИНН, как-то отличается от данных, выданных ранее. Данная информация также обновляется и внутри сервиса, после выполнения данного метода получение текущего пользователя также выдаст актуальную информацию.",
        "operationId": "get_sources_info_sources_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SourcesInfo"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "example": {
                  "message": "Произошла внутренняя ошибка сервиса. Пожалуйста, обратитесь к администрации ",
                  "error_key": "internal_server_error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/sources/{request_id}/state": {
      "get": {
        "tags": [
          "Sources"
        ],
        "summary": "Получить статус запроса добавления источника данных",
        "description": "Метод возвращает информацию по статусу добавления источника данных в мастер системе",
        "operationId": "get_source_request_state_sources__request_id__state_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "request_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "description": "ID запроса на добавление источника",
              "title": "Request Id"
            },
            "description": "ID запроса на добавление источника"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResultInfo"
                }
              }
            }
          },
          "404": {
            "description": "Не найдено",
            "content": {
              "application/json": {
                "example": {
                  "message": "По данному пользователю не найден запрос.",
                  "error_key": "request_not_found"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "example": {
                  "message": "Произошла внутренняя ошибка сервиса. Пожалуйста, обратитесь к администрации ",
                  "error_key": "internal_server_error"
                }
              }
            }
          }
        }
      }
    },
    "/sources/disable": {
      "put": {
        "tags": [
          "Sources"
        ],
        "summary": "Отключить источник данных",
        "description": "Данный метод реализует отключение источника данных. По отключенному источнику данных приостанавливается интеграция. Данные по нему возвращаться будут, однако новых в систему поступать не будет.",
        "operationId": "disable_source_sources_disable_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DisableSource"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "403": {
            "description": "Запрещено",
            "content": {
              "application/json": {
                "example": {
                  "message": "Невозможно удалить источник в процессе добавления",
                  "error_key": "in_progress_deletion_reject"
                }
              }
            }
          },
          "404": {
            "description": "Не найдено",
            "content": {
              "application/json": {
                "example": {
                  "message": "Источник не найден.",
                  "error_key": "source_not_found"
                }
              }
            }
          },
          "422": {
            "description": "Неподдерживаемый контент",
            "content": {
              "application/json": {
                "example": {
                  "message": "При удалении уже обработанного источника дата обязательна!",
                  "error_key": "disable_source_unprocessable"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "example": {
                  "message": "Произошла внутренняя ошибка сервиса. Пожалуйста, обратитесь к администрации ",
                  "error_key": "internal_server_error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/sources/account": {
      "post": {
        "tags": [
          "Sources"
        ],
        "summary": "Добавление счета пользователя напрямую",
        "description": "Данный метод реализует добавление счета для отображение его в источниках данных.",
        "operationId": "create_client_account_sources_account_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccountDetails"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAccountResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "example": {
                  "message": "Произошла внутренняя ошибка сервиса. Пожалуйста, обратитесь к администрации ",
                  "error_key": "internal_server_error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/sources/account/integration": {
      "post": {
        "tags": [
          "Sources"
        ],
        "summary": "Добавление интеграции счета пользователя",
        "description": "Данный метод реализует добавление прямой интеграции с банком по счету клиента.",
        "operationId": "create_user_account_integration_sources_account_integration_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAccountIntegration"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAccountResponse"
                }
              }
            }
          },
          "404": {
            "description": "Не найдено",
            "content": {
              "application/json": {
                "example": {
                  "message": "Не найден банк с БИК: {БИК}",
                  "error_key": "bank_not_found"
                }
              }
            }
          },
          "422": {
            "description": "Неподдерживаемый контент",
            "content": {
              "application/json": {
                "example": {
                  "message": "Не поддерживаемый DirectLine БИК: {БИК}",
                  "error_key": "bank_not_integrated"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "example": {
                  "possible_exceptions": [
                    {
                      "message": "Не создан счет с номером: {номер счета}",
                      "error_key": "account_creation_error"
                    },
                    {
                      "message": "Монолит: {описание ошибки}",
                      "error_key": "direct_bank_error"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/sources/ofd": {
      "post": {
        "tags": [
          "Sources"
        ],
        "summary": "Добавление ОФД пользователя",
        "description": "Данный метод реализует добавление ОФД пользователя.",
        "operationId": "create_client_ofd_sources_ofd_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "login",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Login"
            }
          },
          {
            "name": "password",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Password"
            }
          },
          {
            "name": "date_begin",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "date"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Date Begin"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_client_ofd_sources_ofd_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSourceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "example": {
                  "message": "Произошла внутренняя ошибка сервиса. Пожалуйста, обратитесь к администрации ",
                  "error_key": "internal_server_error"
                }
              }
            }
          }
        }
      }
    },
    "/sources/marketplace": {
      "post": {
        "tags": [
          "Sources"
        ],
        "summary": "Добавление маркетплейс пользователя",
        "description": "Данный метод реализует добавление маркетплейс пользователя.",
        "operationId": "create_client_marketplace_sources_marketplace_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMarketplaceRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSourceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "example": {
                  "message": "Произошла внутренняя ошибка сервиса. Пожалуйста, обратитесь к администрации ",
                  "error_key": "internal_server_error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/operations": {
      "post": {
        "tags": [
          "Operations"
        ],
        "summary": "Получить список размеченных операций",
        "description": "Метод возвращает размеченные и обработанные операции по заданным фильтрам. Данные операции формируют налоговую базу пользователя. Есть возможность фильтрации операций по номеру счета, периоду совершения операций, а также по типу размеченной операции.",
        "operationId": "get_operations_operations_post",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetOperationsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperationsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "example": {
                  "message": "Произошла внутренняя ошибка сервиса. Пожалуйста, обратитесь к администрации ",
                  "error_key": "internal_server_error"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Operations"
        ],
        "summary": "Удалить операцию",
        "description": "Данный метод реализует удаление операции пользователем.",
        "operationId": "delete_operation_operations_delete",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "operation_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Operation Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "example": {
                  "message": "Произошла внутренняя ошибка сервиса. Пожалуйста, обратитесь к администрации ",
                  "error_key": "internal_server_error"
                }
              }
            }
          }
        }
      }
    },
    "/operations/by_hand": {
      "post": {
        "tags": [
          "Operations"
        ],
        "summary": "Добавить операцию вручную",
        "description": "Данный метод реализует ручное добавление операций пользователем.",
        "operationId": "create_operation_operations_by_hand_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateOperation"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "example": {
                  "message": "Произошла внутренняя ошибка сервиса. Пожалуйста, обратитесь к администрации ",
                  "error_key": "internal_server_error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/operations/file": {
      "post": {
        "tags": [
          "Operations"
        ],
        "summary": "Добавить операции из банковской выписки",
        "description": "Данный метод реализует добавление операций пользователя из выгруженной банковской выписки.",
        "operationId": "create_operations_from_file_operations_file_post",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_create_operations_from_file_operations_file_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAccountResponse"
                }
              }
            }
          },
          "404": {
            "description": "Не найдено",
            "content": {
              "application/json": {
                "example": {
                  "message": "Не найден банк с БИК: {БИК}",
                  "error_key": "bank_not_found"
                }
              }
            }
          },
          "422": {
            "description": "Неподдерживаемый контент",
            "content": {
              "application/json": {
                "example": {
                  "possible_exceptions": [
                    {
                      "message": "В выписке ТХТ не найдены номер счета и БИК",
                      "error_key": "requisites_not_found"
                    },
                    {
                      "message": "В выписке ТХТ несколько банковских счетов",
                      "error_key": "several_numbers_found"
                    },
                    {
                      "message": "В выписке TXT не определен номер счета",
                      "error_key": "account_number_not_found"
                    },
                    {
                      "message": "В выписке TXT не определен БИК",
                      "error_key": "bik_not_found"
                    },
                    {
                      "message": "В загруженной выписке не найден ИНН пользователя",
                      "error_key": "inn_not_found"
                    },
                    {
                      "message": "Загруженный файл выписки не прошел предвалидацию.",
                      "error_key": "txt_validation_error"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "example": {
                  "possible_exceptions": [
                    {
                      "message": "Монолит: {описание ошибки}",
                      "error_key": "txt_error"
                    },
                    {
                      "message": "Не создан счет с номером: {номер счета}",
                      "error_key": "account_creation_error"
                    }
                  ]
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/operations/markup": {
      "put": {
        "tags": [
          "Operations"
        ],
        "summary": "Переразметить операцию",
        "description": "Данный метод реализует обновление разметки операции пользователем.",
        "operationId": "update_operation_operations_markup_put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "operation_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Operation Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateOperationMarkup"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Не найдено",
            "content": {
              "application/json": {
                "example": {
                  "message": "Не найдена запись по id: {id}",
                  "error_key": "operation_not_found"
                }
              }
            }
          },
          "422": {
            "description": "Неподдерживаемый контент",
            "content": {
              "application/json": {
                "example": {
                  "message": "Не распознан вид операции по параметру description: {вид операции}",
                  "error_key": "invalid_operation_description"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "example": {
                  "message": "Произошла внутренняя ошибка сервиса. Пожалуйста, обратитесь к администрации ",
                  "error_key": "internal_server_error"
                }
              }
            }
          }
        }
      }
    },
    "/operations/tax_payment": {
      "post": {
        "tags": [
          "Operations"
        ],
        "summary": "Добавить уплату налога",
        "description": "Данный метод реализует ручное добавление операции уплаты налога.",
        "operationId": "create_operation_tax_payment_operations_tax_payment_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTaxPaymentOperationsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "Плохой запрос",
            "content": {
              "application/json": {
                "example": {
                  "message": "Не заполнены реквизиты ЕНП",
                  "error_key": "enp_requisites_not_found"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "example": {
                  "message": "Произошла внутренняя ошибка сервиса. Пожалуйста, обратитесь к администрации ",
                  "error_key": "internal_server_error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/operations/{operation_id}": {
      "get": {
        "tags": [
          "Operations"
        ],
        "summary": "Получить список размеченных операций",
        "description": "Метод возвращает размеченные и обработанные операции по заданным фильтрам. Данные операции формируют налоговую базу пользователя. Есть возможность фильтрации операций по номеру счета, периоду совершения операций, а также по типу размеченной операции.",
        "operationId": "get_operation_by_id_operations__operation_id__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "operation_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "ID операции",
              "title": "Operation Id"
            },
            "description": "ID операции"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Operation"
                }
              }
            }
          },
          "404": {
            "description": "Не найдено",
            "content": {
              "application/json": {
                "example": {
                  "message": "Не найдена запись по id: {id}",
                  "error_key": "operation_not_found"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "example": {
                  "message": "Произошла внутренняя ошибка сервиса. Пожалуйста, обратитесь к администрации ",
                  "error_key": "internal_server_error"
                }
              }
            }
          }
        }
      }
    },
    "/taxes/systems": {
      "get": {
        "tags": [
          "Taxes"
        ],
        "summary": "Получить справочник по системам налогообложения",
        "description": "Метод возвращает справочник по СНО.В некоторых СНО имеется диапазон значений процента НО.",
        "operationId": "get_sno_references_taxes_systems_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SNOReferencesResponse"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "example": {
                  "message": "Произошла внутренняя ошибка сервиса. Пожалуйста, обратитесь к администрации ",
                  "error_key": "internal_server_error"
                }
              }
            }
          }
        }
      }
    },
    "/taxes/calculation": {
      "get": {
        "tags": [
          "Taxes"
        ],
        "summary": "Получить рассчитанные налоги и взносы",
        "description": "Метод возвращает информацию по рассчитанным налогам и взносам по налоговой базе пользователя. Метод возвращает подсчеты, а также информацию об их актуальности. Каждое изменение налоговой базы инициирует процесс пересчета. В зависимости от полученного статуса по актуальности также меняется и взаимодействие пользователя с сервисом (например, ему предлагается заново сгенерировать декларацию по доходам).",
        "operationId": "get_tax_calculation_taxes_calculation_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Год расчета налогов",
              "title": "Year"
            },
            "description": "Год расчета налогов"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxCalculationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Плохой запрос",
            "content": {
              "application/json": {
                "example": {
                  "message": "Не рассчитаны налоги по запрашиваемому периоду",
                  "error_key": "taxes_not_calculated"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "example": {
                  "message": "Произошла внутренняя ошибка сервиса. Пожалуйста, обратитесь к администрации ",
                  "error_key": "internal_server_error"
                }
              }
            }
          }
        }
      }
    },
    "/taxes/ens_requisites": {
      "get": {
        "tags": [
          "Taxes"
        ],
        "summary": "Получить информацию для формирования платежного поручения",
        "description": "Данный метод возвращает информацию, необходимую для формирования платежного поручения на уплату налога.",
        "operationId": "get_ens_info_taxes_ens_requisites_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ENSInfo"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "example": {
                  "message": "Произошла внутренняя ошибка сервиса. Пожалуйста, обратитесь к администрации ",
                  "error_key": "internal_server_error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/taxes/ens_order": {
      "post": {
        "tags": [
          "Taxes"
        ],
        "summary": "Сформировать платежное поручение",
        "description": "Данный метод возвращает заполненное платежное поручение на уплату налога.",
        "operationId": "generate_ens_order_taxes_ens_order_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateENSOrder"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentOrder"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "example": {
                  "message": "Произошла внутренняя ошибка сервиса. Пожалуйста, обратитесь к администрации ",
                  "error_key": "internal_server_error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/taxes/ens_order/txt": {
      "post": {
        "tags": [
          "Taxes"
        ],
        "summary": "Сформировать платежное поручение, получить файл txt",
        "description": "Данный метод возвращает заполненное платежное поручение на уплату налога в формате txt.",
        "operationId": "generate_ens_order_txt_taxes_ens_order_txt_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateENSOrder"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Платежное поручение в формате txt."
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "example": {
                  "message": "Произошла внутренняя ошибка сервиса. Пожалуйста, обратитесь к администрации ",
                  "error_key": "internal_server_error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/taxes/recalculation": {
      "put": {
        "tags": [
          "Taxes"
        ],
        "summary": "Обновление расчета налога",
        "operationId": "recalculation_taxes_taxes_recalculation_put",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BRNOkResponse"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "example": {
                  "message": "Произошла внутренняя ошибка сервиса. Пожалуйста, обратитесь к администрации ",
                  "error_key": "internal_server_error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/tasks": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Получить задачи пользователя",
        "description": "Метод возвращает информацию о предстоящих задачах - налогах и взносах к уплате, сроках сдачи уведомлений и деклараций. Актуальность данной информации зависит от статуса расчета налоговой базы (taxes/calculation).",
        "operationId": "get_tasks_tasks_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskResponse"
                }
              }
            }
          },
          "400": {
            "description": "Плохой запрос",
            "content": {
              "application/json": {
                "example": {
                  "message": "Не рассчитаны налоги за ХХХХ год",
                  "error_key": "invalid_tasks_period"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "example": {
                  "message": "Произошла внутренняя ошибка сервиса. Пожалуйста, обратитесь к администрации ",
                  "error_key": "internal_server_error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/tasks/reports_info": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Получить дополнительную информацию по задачам налоговой отчетности",
        "description": "Метод возвращает дополнительную информацию по задачам налоговой отчетности - статусы сдачи, суммы в уведомлениях. Данную информацию возможно запрашивать для указанного налогового периода (года). Актуальность данной информации зависит от статуса расчета налоговой базы (taxes/calculation).",
        "operationId": "get_tasks_reports_info_tasks_reports_info_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "year",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Year"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportsInfoResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "example": {
                  "message": "Произошла внутренняя ошибка сервиса. Пожалуйста, обратитесь к администрации ",
                  "error_key": "internal_server_error"
                }
              }
            }
          }
        }
      }
    },
    "/tasks/references": {
      "get": {
        "tags": [
          "Tasks"
        ],
        "summary": "Получить справочник задачи пользователя",
        "description": "Метод возвращает справочник задач пользователя для их типизации и отображения справки по ним.",
        "operationId": "get_tasks_references_tasks_references_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaskReferencesResponse"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "example": {
                  "message": "Произошла внутренняя ошибка сервиса. Пожалуйста, обратитесь к администрации ",
                  "error_key": "internal_server_error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/tasks/status": {
      "put": {
        "tags": [
          "Tasks"
        ],
        "summary": "Обновить статус задачи",
        "description": "Данный метод реализует механизм изменения статуса приема деклараций и уведомлений в ЛК клиента.",
        "operationId": "update_report_status_tasks_status_put",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateReportRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "404": {
            "description": "Не найдено",
            "content": {
              "application/json": {
                "example": {
                  "message": "Не найден документ уведомление по номеру {report_code}",
                  "error_key": "report_not_found"
                }
              }
            }
          },
          "422": {
            "description": "Неподдерживаемый контент",
            "content": {
              "application/json": {
                "example": {
                  "possible_exceptions": [
                    {
                      "message": "Некорректный статус {report_status}",
                      "error_key": "invalid_report_status"
                    },
                    {
                      "message": "В справонике не найден статус {report_status}",
                      "error_key": "report_status_not_found"
                    }
                  ]
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "example": {
                  "message": "Произошла внутренняя ошибка сервиса. Пожалуйста, обратитесь к администрации ",
                  "error_key": "internal_server_error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/reports": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Сгенерировать отчетность выбранного типа за выбранный период",
        "description": "Данный метод реализует генерацию отчетности пользователя (уведомления и декларации). Сгенерированная отчетность при этом запросе хранится на сервере и возвращается пользователю отдельным запросом. Актуальность сформированной отчетности зависит от статуса расчета налоговой базы (taxes/calculation).",
        "operationId": "generate_reports_reports_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GenerateReportsRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "example": {
                  "message": "Произошла внутренняя ошибка сервиса. Пожалуйста, обратитесь к администрации ",
                  "error_key": "internal_server_error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ]
      }
    },
    "/reports/kudir": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Получить КУДиР за выбранный период",
        "description": "Данный метод реализует генерацию и возврат КУДиР пользователя. Сгенерированная отчетность при этом НЕ хранится на сервере. Актуальность сформированной отчетности зависит  от статуса расчета налоговой базы (taxes/calculation).",
        "operationId": "get_kudir_report_reports_kudir_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "period_type",
            "in": "query",
            "required": true,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ReportPeriodType"
                }
              ],
              "description": "Тип налогового периода. Возможные значения: 1 - 1 квартал. 2 - 2 квартал. 3 - 3 квартал. 4 - 4 квартал. 6 - полугодие. 9 - 9 месяцев. 0 - весь год.",
              "title": "Period Type"
            },
            "description": "Тип налогового периода. Возможные значения: 1 - 1 квартал. 2 - 2 квартал. 3 - 3 квартал. 4 - 4 квартал. 6 - полугодие. 9 - 9 месяцев. 0 - весь год."
          },
          {
            "name": "period_year",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Год налогового периода",
              "title": "Period Year"
            },
            "description": "Год налогового периода"
          },
          {
            "name": "kudir_format",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/KudirFormat"
                }
              ],
              "description": "Формат КУДиР. Возможные значения: pdf. xlsx.",
              "default": "pdf",
              "title": "Kudir Format"
            },
            "description": "Формат КУДиР. Возможные значения: pdf. xlsx."
          }
        ],
        "responses": {
          "200": {
            "description": "Файл сформированной КУДиР в формате .pdf"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "example": {
                  "message": "Произошла внутренняя ошибка сервиса. Пожалуйста, обратитесь к администрации ",
                  "error_key": "internal_server_error"
                }
              }
            }
          }
        }
      }
    },
    "/reports/{report_id}.{report_format}": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Получить сгенерированный файл отчетности в выбранном формате",
        "description": "Данный метод возвращает сгенерированный файл в отчетности в формате pdf / xml.",
        "operationId": "get_report_by_id_reports__report_id___report_format__get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "report_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Report Id"
            }
          },
          {
            "name": "report_format",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ReportFormat"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Файл отчетности выбранного формата"
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "example": {
                  "message": "Произошла внутренняя ошибка сервиса. Пожалуйста, обратитесь к администрации ",
                  "error_key": "internal_server_error"
                }
              }
            }
          }
        }
      }
    },
    "/banners": {
      "get": {
        "tags": [
          "Banners"
        ],
        "summary": "Получить информационные баннеры пользователя",
        "operationId": "get_user_banners_banners_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "current_date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "description": "Текущая дата на клиенте. Требуется, чтобы избежать разницы временных зон",
              "title": "Current Date"
            },
            "description": "Текущая дата на клиенте. Требуется, чтобы избежать разницы временных зон"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoBannersResponse"
                }
              }
            }
          },
          "403": {
            "description": "Запрещено",
            "content": {
              "application/json": {
                "example": {
                  "message": "Невозможно получить информационные баннеры за промежуток времени, превышающий текущую дату на день или больше.",
                  "error_key": "invalid_future_period"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "example": {
                  "message": "Произошла внутренняя ошибка сервиса. Пожалуйста, обратитесь к администрации ",
                  "error_key": "internal_server_error"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Banners"
        ],
        "summary": "Обновить статус информационного баннера у пользователя",
        "description": "Данный метод реализует обновление статуса баннера пользователя - на данный момент возможность скрыть баннер.",
        "operationId": "update_user_banner_state_banners_put",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "banner_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Banner Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "409": {
            "description": "Конфликт",
            "content": {
              "application/json": {
                "example": {
                  "message": "Пользователь уже скрыл баннер.",
                  "error_key": "banner_already_hidden"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "example": {
                  "message": "Произошла внутренняя ошибка сервиса. Пожалуйста, обратитесь к администрации ",
                  "error_key": "internal_server_error"
                }
              }
            }
          }
        }
      }
    },
    "/references/bank_info": {
      "get": {
        "tags": [
          "References"
        ],
        "summary": "Получить информацию по банку по БИК",
        "description": "Метод возвращает информацию по банку по БИК.",
        "operationId": "get_bank_info_references_bank_info_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "bik",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "description": "БИК банка",
              "title": "Bik"
            },
            "description": "БИК банка"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BankReferenceResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "example": {
                  "message": "Произошла внутренняя ошибка сервиса. Пожалуйста, обратитесь к администрации ",
                  "error_key": "internal_server_error"
                }
              }
            }
          }
        }
      }
    },
    "/references/tax_limits": {
      "get": {
        "tags": [
          "References"
        ],
        "summary": "Получить лимиты по налогам и взносам",
        "description": "Метод возвращает лимиты по налогам и взносам. При отправке пустого списка years, вернутся лимиты за текущий год - 1, текущий год и текущий год + 1",
        "operationId": "get_tax_limits_references_tax_limits_get",
        "security": [
          {
            "OAuth2PasswordBearer": []
          }
        ],
        "parameters": [
          {
            "name": "years",
            "in": "query",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              },
              "description": "Годы, за которые необходимо предоставить лимиты.",
              "title": "Years"
            },
            "description": "Годы, за которые необходимо предоставить лимиты."
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxLimitsResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          },
          "500": {
            "description": "Внутренняя ошибка сервера",
            "content": {
              "application/json": {
                "example": {
                  "message": "Произошла внутренняя ошибка сервиса. Пожалуйста, обратитесь к администрации ",
                  "error_key": "internal_server_error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccountCredentials": {
        "properties": {
          "login": {
            "type": "string",
            "title": "Login",
            "description": "Логин от учетной записи"
          },
          "password": {
            "type": "string",
            "title": "Password",
            "description": "Пароль от учетной записи"
          }
        },
        "type": "object",
        "required": [
          "login",
          "password"
        ],
        "title": "AccountCredentials"
      },
      "AccountDetails": {
        "properties": {
          "account_number": {
            "type": "string",
            "title": "Account Number",
            "description": "Номер счета пользователя. Обязателен для заполнения, если integration_type = 1. Также обязателен при прямом добавлении счета."
          },
          "bank_bik": {
            "type": "string",
            "title": "Bank Bik",
            "description": "БИК банка. Обязателен для заполнения, если integration_type = 1. Также обязателен при прямом добавлении счета."
          }
        },
        "type": "object",
        "required": [
          "account_number",
          "bank_bik"
        ],
        "title": "AccountDetails"
      },
      "AccountIntegrationType": {
        "type": "integer",
        "enum": [
          1,
          2,
          3
        ],
        "title": "AccountIntegrationType"
      },
      "BRNOkResponse": {
        "properties": {
          "status": {
            "type": "string",
            "title": "Status"
          }
        },
        "type": "object",
        "required": [
          "status"
        ],
        "title": "BRNOkResponse"
      },
      "BankReferenceResponse": {
        "properties": {
          "bik": {
            "type": "string",
            "title": "Bik",
            "description": "БИК банка"
          },
          "bank_name": {
            "type": "string",
            "title": "Bank Name",
            "description": "Наименование банка"
          },
          "bank_short_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bank Short Name",
            "description": "Короткое наименование банка"
          },
          "cor_account": {
            "type": "string",
            "title": "Cor Account",
            "description": "Корреспондентский счет"
          }
        },
        "type": "object",
        "required": [
          "bik",
          "bank_name",
          "cor_account"
        ],
        "title": "BankReferenceResponse"
      },
      "BannerType": {
        "type": "string",
        "enum": [
          "update_data",
          "update_user_info",
          "new_user",
          "advertisement"
        ],
        "title": "BannerType"
      },
      "Body_create_client_ofd_sources_ofd_post": {
        "properties": {
          "ofd_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OFDType"
              }
            ],
            "description": "Тип синхронизации. Возможные значения: 1 - Отчет по чекам (как при подгрузке табличной формы). 2 - API ОФД (как при автозагрузке)"
          },
          "ofd_source": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OFDSource"
              }
            ],
            "description": "Наименование ОФД. Возможные значения: Первый ОФД. ОФД.ру. Платформа ОФД. Яндекс ОФД. СБИС ОФД. Такском ОФД. Контур ОФД.Обязателен при source_type = ofd"
          },
          "ofd_file": {
            "type": "string",
            "format": "binary",
            "title": "Ofd File",
            "description": "Файл выгрузки по чекам. Обязателен для заполнения, если ofd_type = 1"
          }
        },
        "type": "object",
        "required": [
          "ofd_type",
          "ofd_source"
        ],
        "title": "Body_create_client_ofd_sources_ofd_post"
      },
      "Body_create_operations_from_file_operations_file_post": {
        "properties": {
          "account_file": {
            "type": "string",
            "format": "binary",
            "title": "Account File",
            "description": "Файл с банковской выгрузкой формата .txt. "
          }
        },
        "type": "object",
        "required": [
          "account_file"
        ],
        "title": "Body_create_operations_from_file_operations_file_post"
      },
      "Body_login_auth_post": {
        "properties": {
          "grant_type": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "password"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grant Type"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": ""
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "Body_login_auth_post"
      },
      "ChangeTax": {
        "properties": {
          "year": {
            "type": "integer",
            "title": "Year",
            "description": "Год настройки СНО"
          },
          "tax_system": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxSystemType"
              }
            ],
            "description": "Система налогообложения. Возможные значения: usn_d - УСН Доходы. usn_d_r - УСН Доходы-Расходы. patent - Патент. eshn - ЕСХН. osn - Общая система НО. "
          },
          "tax_rate": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tax Rate",
            "description": "Налоговая ставка. Возможные значения: tax_system = usn_d - от 0 до 6. tax_system = usn_d_r - от 0 до 15."
          },
          "rate_reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rate Reason",
            "description": "Обоснование сниженной налоговой ставки. Формат XXXXYYYYZZZZ, где: XXXX - номер статьи, в которой указана сниженная ставка. YYYY - номер пункта. ZZZZ - номер подпункта. Допускаются цифры и символы.НЕ допускаются пробелы. Обязательно к заполнению, если передано: tax_system = usn_d И tax_rate < 6 ИЛИ tax_system = usn_d_r И tax_rate < 15"
          },
          "reason_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RateReasonType"
              },
              {
                "type": "null"
              }
            ],
            "description": "Причина снижения ставки. Возможные значения: crimea - Предприниматели Крыма и Севастополя. holidays - ИП на налоговых каникулах."
          }
        },
        "type": "object",
        "required": [
          "year",
          "tax_system"
        ],
        "title": "ChangeTax",
        "example": {
          "rate_reason": "01.200010002",
          "reason_type": "nothing",
          "tax_rate": 3,
          "tax_system": "usn_d",
          "year": 2023
        }
      },
      "ContributionsInfo": {
        "properties": {
          "fixed_fees": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FixedFeesInfo"
              }
            ],
            "description": "Блок Фиксированные взносы"
          },
          "income_percentage": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IncomePercentage"
              },
              {
                "type": "null"
              }
            ],
            "description": "1% с дохода"
          }
        },
        "type": "object",
        "required": [
          "fixed_fees"
        ],
        "title": "ContributionsInfo"
      },
      "CreateAccountIntegration": {
        "properties": {
          "integration_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AccountIntegrationType"
              }
            ],
            "description": "Тип интеграции счета. Возможные значения: 1 - Директ-банк. 2 - API-метод. 3 - ЛК банка. "
          },
          "account_credentials": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AccountCredentials"
              },
              {
                "type": "null"
              }
            ],
            "description": "Данные для доступа к подключению счета. Необязательно для API-метода."
          },
          "account_details": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AccountDetails"
              },
              {
                "type": "null"
              }
            ],
            "description": "Информация по счету пользователя. Необязательно для API-метода"
          }
        },
        "type": "object",
        "required": [
          "integration_type"
        ],
        "title": "CreateAccountIntegration"
      },
      "CreateAccountResponse": {
        "properties": {
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date"
          },
          "account_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Account Number"
          },
          "bank_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bank Name"
          },
          "bank_short_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bank Short Name"
          },
          "bank_bik": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bank Bik"
          },
          "request_id": {
            "type": "string",
            "format": "uuid",
            "title": "Request Id"
          },
          "source_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Id"
          }
        },
        "type": "object",
        "required": [
          "request_id"
        ],
        "title": "CreateAccountResponse"
      },
      "CreateMarketplaceRequest": {
        "properties": {
          "marketplace_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MarketplaceType"
              }
            ],
            "description": "Тип синхронизации. Возможные значения: 1 - Яндекс OAuth. 2 - ЛК Wildberries. 3 - ЛК Ozon."
          },
          "marketplace_credentials": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/MarketplaceCredentials"
              },
              {
                "type": "null"
              }
            ],
            "description": "Данные для доступа к подключению маркетплейса"
          }
        },
        "type": "object",
        "required": [
          "marketplace_type"
        ],
        "title": "CreateMarketplaceRequest"
      },
      "CreateOperation": {
        "properties": {
          "category": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OperationCategory"
              }
            ],
            "description": "Признак дебетования. = credit - списание с расчетного счета клиента. = debet - поступление на расчетный счет клиента"
          },
          "operation_type": {
            "type": "integer",
            "enum": [
              1,
              2,
              3
            ],
            "title": "Operation Type",
            "description": "Признак налоговой базы. Возможные значения: Если category = debet: 1 - Доход. 2 - Не влияет на налоговую базу. Если category = credit: 2 - Не влияет на налоговую базу. 3 - Возврат покупателю."
          },
          "counterparty_name": {
            "type": "string",
            "title": "Counterparty Name",
            "description": "Наименование контрагента"
          },
          "purpose": {
            "type": "string",
            "title": "Purpose",
            "description": "Назначение платежа"
          },
          "amount": {
            "type": "number",
            "title": "Amount",
            "description": "Сумма операции"
          },
          "date": {
            "type": "string",
            "format": "date",
            "title": "Date",
            "description": "Дата совершения операции"
          },
          "doc_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doc Number",
            "description": "Номер документа"
          }
        },
        "type": "object",
        "required": [
          "category",
          "operation_type",
          "counterparty_name",
          "purpose",
          "amount",
          "date"
        ],
        "title": "CreateOperation",
        "example": {
          "amount": 25000.9,
          "category": "debet",
          "counterparty_name": "ИП Варягин",
          "date": "2023-10-30",
          "doc_number": "123",
          "operation_type": 1,
          "purpose": "Доход от продажи оборудования"
        }
      },
      "CreateSourceResponse": {
        "properties": {
          "request_id": {
            "type": "string",
            "format": "uuid",
            "title": "Request Id"
          },
          "source_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Id"
          }
        },
        "type": "object",
        "required": [
          "request_id"
        ],
        "title": "CreateSourceResponse"
      },
      "CreateTaxPaymentOperation": {
        "properties": {
          "date": {
            "type": "string",
            "format": "date",
            "title": "Date",
            "description": "Дата совершения операции"
          },
          "doc_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doc Number",
            "description": "Номер документа"
          },
          "tax_period": {
            "type": "integer",
            "title": "Tax Period",
            "description": "Год уплаты налога"
          },
          "tax_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxType"
              }
            ],
            "description": "Тип налога. Возможные значения: 1 - УСН. 2 - фиксированные взносы за ИП. 3 - 1% с дохода сверх 300 000 руб. 4 - ЕНС. "
          },
          "amount": {
            "type": "number",
            "title": "Amount"
          }
        },
        "type": "object",
        "required": [
          "date",
          "tax_period",
          "tax_type",
          "amount"
        ],
        "title": "CreateTaxPaymentOperation"
      },
      "CreateTaxPaymentOperationsRequest": {
        "properties": {
          "tax_payments": {
            "items": {
              "$ref": "#/components/schemas/CreateTaxPaymentOperation"
            },
            "type": "array",
            "title": "Tax Payments",
            "description": "Уплаты налога"
          }
        },
        "type": "object",
        "required": [
          "tax_payments"
        ],
        "title": "CreateTaxPaymentOperationsRequest",
        "example": {
          "tax_payments": [
            {
              "amount": 25000.9,
              "date": "2023-10-30",
              "doc_number": "123",
              "tax_period": 2023,
              "tax_type": 1
            }
          ]
        }
      },
      "CreateUser": {
        "properties": {
          "email": {
            "type": "string",
            "title": "Email",
            "description": "Электронная почта пользователя"
          },
          "phone_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Number",
            "description": "Номер телефона пользователя"
          }
        },
        "type": "object",
        "required": [
          "email"
        ],
        "title": "CreateUser"
      },
      "CreateUserLead": {
        "properties": {
          "phone_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Number",
            "description": "Телефон пользователя"
          },
          "reason": {
            "allOf": [
              {
                "$ref": "#/components/schemas/LeadReason"
              }
            ],
            "description": "Причина интереса пользователя"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description",
            "description": "Описание интереса пользователя"
          }
        },
        "type": "object",
        "required": [
          "reason"
        ],
        "title": "CreateUserLead",
        "example": {
          "phone_number": "+79114651111",
          "reason": "ens"
        }
      },
      "DisableSource": {
        "properties": {
          "disable_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Disable Date",
            "description": "Дата отключения интеграции. Необязательна, если отключается источник с ошибкой"
          },
          "source_id": {
            "type": "string",
            "title": "Source Id",
            "description": "ID отключаемого источника"
          }
        },
        "type": "object",
        "required": [
          "source_id"
        ],
        "title": "DisableSource"
      },
      "DueDate": {
        "properties": {
          "year": {
            "type": "integer",
            "title": "Year",
            "description": "Отчетный год"
          },
          "date": {
            "type": "string",
            "format": "date",
            "title": "Date",
            "description": "Cрок действия по задачи по указанному отчетному году"
          }
        },
        "type": "object",
        "required": [
          "year",
          "date"
        ],
        "title": "DueDate"
      },
      "ENSBalanceInfo": {
        "properties": {
          "opening_balance": {
            "type": "number",
            "title": "Opening Balance",
            "description": "Сальдо на 01.01"
          },
          "closing_balance": {
            "type": "number",
            "title": "Closing Balance",
            "description": "Сальдо конечное"
          }
        },
        "type": "object",
        "required": [
          "opening_balance",
          "closing_balance"
        ],
        "title": "ENSBalanceInfo"
      },
      "ENSInfo": {
        "properties": {
          "purpose": {
            "type": "string",
            "title": "Purpose",
            "description": "Назначение платежа",
            "default": "Единый налоговый платеж"
          },
          "receiver_inn": {
            "type": "string",
            "title": "Receiver Inn",
            "description": "ИНН получателя",
            "default": "7727406020"
          },
          "receiver_kpp": {
            "type": "string",
            "title": "Receiver Kpp",
            "description": "КПП получателя",
            "default": "770801001"
          },
          "receiver_bank_name": {
            "type": "string",
            "title": "Receiver Bank Name",
            "description": "Наименование банка получателя",
            "default": "ОТДЕЛЕНИЕ ТУЛА БАНКА РОССИИ//УФК по Тульской области, г Тула"
          },
          "receiver_bank_bik": {
            "type": "string",
            "title": "Receiver Bank Bik",
            "description": "БИК банка получателя",
            "default": "017003983"
          },
          "receiver_cor_account": {
            "type": "string",
            "title": "Receiver Cor Account",
            "description": "Корр. счет банка получателя",
            "default": "40102810445370000059"
          },
          "receiver_name": {
            "type": "string",
            "title": "Receiver Name",
            "description": "Наименование получателя",
            "default": "Казначейство России (ФНС России)"
          },
          "receiver_account": {
            "type": "string",
            "title": "Receiver Account",
            "description": "Номер счета получателя",
            "default": "03100643000000018500"
          },
          "kbk": {
            "type": "string",
            "title": "Kbk",
            "description": "Код бюджетной классификации",
            "default": "18201061201010000510"
          }
        },
        "type": "object",
        "title": "ENSInfo"
      },
      "FixedFeesInfo": {
        "properties": {
          "accrued_ff": {
            "type": "number",
            "title": "Accrued Ff",
            "description": "Начислены фикс. взносы"
          },
          "paid_ff": {
            "type": "number",
            "title": "Paid Ff",
            "description": "Уплачено фикс. взносов"
          },
          "due_ff": {
            "type": "number",
            "title": "Due Ff",
            "description": "Фикс. взносы к уплате"
          },
          "due_date_ff": {
            "type": "string",
            "format": "date",
            "title": "Due Date Ff",
            "description": "Дата уплаты фикс. взносов. Всегда первый рабочий день года."
          }
        },
        "type": "object",
        "required": [
          "accrued_ff",
          "paid_ff",
          "due_ff",
          "due_date_ff"
        ],
        "title": "FixedFeesInfo"
      },
      "GenerateENSOrder": {
        "properties": {
          "account_number": {
            "type": "string",
            "title": "Account Number",
            "description": "Номер счета списания"
          },
          "purpose": {
            "type": "string",
            "title": "Purpose",
            "description": "Назначение платежа"
          },
          "amount": {
            "type": "number",
            "title": "Amount",
            "description": "Сумма операции"
          }
        },
        "type": "object",
        "required": [
          "account_number",
          "purpose",
          "amount"
        ],
        "title": "GenerateENSOrder",
        "example": {
          "account_number": "40702810845370000004",
          "amount": 17800.55,
          "purpose": "Единый налоговый платеж"
        }
      },
      "GenerateReportsRequest": {
        "properties": {
          "report_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReportType"
              }
            ],
            "description": "Тип запрашиваемого отчета. Возможные значения: 2 - Уведомления об исчисленных авансовых платежах по УСН. 3 - Налоговая декларация УСН. "
          },
          "period_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReportPeriodType"
              }
            ],
            "description": "Тип налогового периода. Возможные значения: 1 - 1 квартал. 2 - 2 квартал. 3 - 3 квартал. 4 - 4 квартал. 6 - полугодие. 9 - 9 месяцев. 0 - весь год. Для Уведомления возможен выбор только 1-3 кварталов. Для декларации только 0 (весь год)"
          },
          "period_year": {
            "type": "integer",
            "title": "Period Year",
            "description": "Год налогового периода"
          }
        },
        "type": "object",
        "required": [
          "report_type",
          "period_type",
          "period_year"
        ],
        "title": "GenerateReportsRequest",
        "example": {
          "period_type": 1,
          "period_year": 2023,
          "report_type": 2
        }
      },
      "GetOperationsRequest": {
        "properties": {
          "start_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Date",
            "description": "Начало периода совершения операций"
          },
          "end_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Date",
            "description": "Окончание периода совершения операций"
          },
          "operations_types": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/OperationType"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Operations Types",
            "description": "Вид операции. Обязателен при использовании параметров description1 - доход. 2 - не влияет на налоговую базу. 3 - возврат покупателю. 4 - уплата налогов/взносов."
          },
          "sources_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sources Ids",
            "description": "Идентификаторы источников данных"
          },
          "pagination": {
            "$ref": "#/components/schemas/OperationsPagination"
          }
        },
        "type": "object",
        "required": [
          "pagination"
        ],
        "title": "GetOperationsRequest"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "IncomePercentage": {
        "properties": {
          "period_ip": {
            "type": "integer",
            "title": "Period Ip",
            "description": "Период, за который рассчитан 1% с дохода. Возможные значения: 1 - 1 квартал. 6 - полугодие. 9 - 9 месяцев. 0 - весь год."
          },
          "accrued_ip": {
            "type": "number",
            "title": "Accrued Ip",
            "description": "Начислен 1% с дохода за ближайший закрытый период"
          },
          "paid_ip": {
            "type": "number",
            "title": "Paid Ip",
            "description": "Уплачен 1% с дохода за за ближайший закрытый период"
          },
          "due_ip": {
            "type": "number",
            "title": "Due Ip",
            "description": "1% с дохода к уплате за год"
          },
          "due_date_ip": {
            "type": "string",
            "format": "date",
            "title": "Due Date Ip",
            "description": "Дата уплаты 1% с дохода (окончательная)"
          }
        },
        "type": "object",
        "required": [
          "period_ip",
          "accrued_ip",
          "paid_ip",
          "due_ip",
          "due_date_ip"
        ],
        "title": "IncomePercentage"
      },
      "InfoBannersResponse": {
        "properties": {
          "banners": {
            "items": {
              "$ref": "#/components/schemas/UserInfoBanner"
            },
            "type": "array",
            "title": "Banners",
            "description": "Информационные баннеры во всей системе"
          }
        },
        "type": "object",
        "required": [
          "banners"
        ],
        "title": "InfoBannersResponse"
      },
      "InnInfo": {
        "properties": {
          "full_name": {
            "type": "string",
            "title": "Full Name",
            "description": "Полное имя"
          },
          "lastname": {
            "type": "string",
            "title": "Lastname",
            "description": "Фамилия"
          },
          "firstname": {
            "type": "string",
            "title": "Firstname",
            "description": "Имя"
          },
          "patronymic": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patronymic",
            "description": "Отчество"
          },
          "fns_code": {
            "type": "string",
            "title": "Fns Code",
            "description": "Код ИФНС"
          },
          "fns_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fns Description",
            "description": "Название ИФНС"
          },
          "fns_reg_date": {
            "type": "string",
            "format": "date",
            "title": "Fns Reg Date",
            "description": "Дата регистрации ИП в ФНС"
          }
        },
        "type": "object",
        "required": [
          "full_name",
          "lastname",
          "firstname",
          "fns_code",
          "fns_reg_date"
        ],
        "title": "InnInfo"
      },
      "InnInfoToSave": {
        "properties": {
          "inn": {
            "type": "string",
            "title": "Inn",
            "description": "ИНН пользователя"
          },
          "tax_system": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxSystemType"
              }
            ],
            "description": "Система налогообложения. Возможные значения: usn_d - УСН Доходы. "
          },
          "tax_rate": {
            "type": "integer",
            "title": "Tax Rate",
            "description": "Налоговая ставка. Возможные значения: tax_system = usn_d - от 0 до 6. "
          },
          "rate_reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rate Reason",
            "description": "Обоснование сниженной налоговой ставки. Формат XXXXYYYYZZZZ, где: XXXX - номер статьи, в которой указана сниженная ставка. YYYY - номер пункта. ZZZZ - номер подпункта. Допускаются цифры и символы.НЕ допускаются пробелы. Обязательно к заполнению, если передано: tax_system = usn_d И tax_rate < 6 ИЛИ tax_system = usn_d_r И tax_rate < 15"
          },
          "reason_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RateReasonType"
              }
            ],
            "description": "Причина снижения ставки. Возможные значения: crimea - Предприниматели Крыма и Севастополя. holidays - ИП на налоговых каникулах. nothing - СНО usn_d или usn_d_r (используется значение из tax_system)."
          },
          "start_year": {
            "type": "integer",
            "title": "Start Year",
            "description": "Год начала расчета налогов"
          }
        },
        "type": "object",
        "required": [
          "inn",
          "tax_system",
          "tax_rate",
          "start_year"
        ],
        "title": "InnInfoToSave"
      },
      "KudirFormat": {
        "type": "string",
        "enum": [
          "pdf",
          "xlsx"
        ],
        "title": "KudirFormat"
      },
      "LeadInfoToSave": {
        "properties": {
          "inn": {
            "type": "string",
            "title": "Inn",
            "description": "ИНН пользователя"
          },
          "tax_system": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaxSystemType"
              }
            ],
            "description": "Система налогообложения. Возможные значения: usn_d_r - УСН Доходы-Расходы. patent - Патент. eshn - ЕСХН. osn - Общая система НО. "
          },
          "tax_rate": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tax Rate",
            "description": "Налоговая ставка. Возможные значения: tax_system = usn_d_r - от 0 до 15."
          },
          "rate_reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rate Reason",
            "description": "Обоснование сниженной налоговой ставки. Формат XXXXYYYYZZZZ, где: XXXX - номер статьи, в которой указана сниженная ставка. YYYY - номер пункта. ZZZZ - номер подпункта. Допускаются цифры и символы.НЕ допускаются пробелы. Обязательно к заполнению, если передано: tax_system = usn_d И tax_rate < 6 ИЛИ tax_system = usn_d_r И tax_rate < 15"
          },
          "reason_type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/RateReasonType"
              },
              {
                "type": "null"
              }
            ],
            "description": "Причина снижения ставки. Возможные значения: crimea - Предприниматели Крыма и Севастополя. holidays - ИП на налоговых каникулах. nothing - СНО usn_d или usn_d_r (используется значение из tax_system).Если отправляются tax_system не usn_d или usn_d_r, значение отправлять не нужно."
          },
          "start_year": {
            "type": "integer",
            "title": "Start Year",
            "description": "Год начала расчета налогов"
          },
          "phone_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Number",
            "description": "Телефон пользователя"
          }
        },
        "type": "object",
        "required": [
          "inn",
          "tax_system",
          "start_year"
        ],
        "title": "LeadInfoToSave"
      },
      "LeadReason": {
        "type": "string",
        "enum": [
          "ens",
          "marketplace",
          "ofd",
          "service_disable",
          "other"
        ],
        "title": "LeadReason"
      },
      "MarketplaceCredentials": {
        "properties": {
          "login": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Login",
            "description": "Логин. Необязателен в случае marketplace_type - 2."
          },
          "password": {
            "type": "string",
            "title": "Password",
            "description": "Пароль / токен доступа"
          }
        },
        "type": "object",
        "required": [
          "password"
        ],
        "title": "MarketplaceCredentials"
      },
      "MarketplaceName": {
        "type": "string",
        "enum": [
          "Яндекс Маркет",
          "Wildberries",
          "Ozon"
        ],
        "title": "MarketplaceName"
      },
      "MarketplaceType": {
        "type": "integer",
        "enum": [
          1,
          2,
          3
        ],
        "title": "MarketplaceType"
      },
      "MarkupModeCode": {
        "type": "integer",
        "enum": [
          1,
          2,
          3
        ],
        "title": "MarkupModeCode"
      },
      "NoticeInfo": {
        "properties": {
          "usn_1_kv": {
            "type": "number",
            "title": "Usn 1 Kv",
            "description": "Исчислено налога УСН за 1 квартал"
          },
          "usn_2_kv": {
            "type": "number",
            "title": "Usn 2 Kv",
            "description": "Исчислено налога УСН за 2 квартал"
          },
          "usn_3_kv": {
            "type": "number",
            "title": "Usn 3 Kv",
            "description": "Исчислено налога УСН за 3 квартал"
          },
          "usn_4_kv": {
            "type": "number",
            "title": "Usn 4 Kv",
            "description": "Исчислено налога УСН за 4 квартал"
          }
        },
        "type": "object",
        "required": [
          "usn_1_kv",
          "usn_2_kv",
          "usn_3_kv",
          "usn_4_kv"
        ],
        "title": "NoticeInfo"
      },
      "OFDSource": {
        "type": "string",
        "enum": [
          "ОФД.ру",
          "Первый ОФД",
          "Платформа ОФД",
          "Яндекс ОФД",
          "СБИС ОФД",
          "Такском ОФД",
          "Контур ОФД"
        ],
        "title": "OFDSource"
      },
      "OFDType": {
        "type": "integer",
        "enum": [
          1,
          2
        ],
        "title": "OFDType"
      },
      "Operation": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Идентификатор операции"
          },
          "account_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Account Number",
            "description": "Номер счета операции"
          },
          "bank_bik": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bank Bik",
            "description": "БИК банка клиента, по которому прошла операция"
          },
          "short_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Short Name",
            "description": "Сокращенное название"
          },
          "source_id": {
            "type": "string",
            "title": "Source Id",
            "description": "ID источника, по которому у клиента прошла операция"
          },
          "source_name": {
            "type": "string",
            "title": "Source Name",
            "description": "Наименование источника, по счету которого у клиента прошла операция."
          },
          "counterparty_name": {
            "type": "string",
            "title": "Counterparty Name",
            "description": "Наименование контрагента"
          },
          "purpose": {
            "type": "string",
            "title": "Purpose",
            "description": "Назначение платежа"
          },
          "amount_doc": {
            "type": "number",
            "title": "Amount Doc",
            "description": "Сумма операции по документу"
          },
          "currency_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Currency Code",
            "description": "Валюта операции"
          },
          "category": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OperationCategory"
              }
            ],
            "description": "Признак дебетования. = credit - списание с расчетного счета клиента. = debet - поступление на расчетный счет клиента"
          },
          "date": {
            "type": "string",
            "format": "date",
            "title": "Date",
            "description": "Дата совершения операции"
          },
          "markup_mode_code": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MarkupModeCode"
              }
            ],
            "description": "Признак, кто выполнил разметку операции. \n1 - авторазметка БРН. 2 - разметка пользователем. 3 - разметка бухгалтером."
          },
          "doc_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Doc Number",
            "description": "Номер документа"
          },
          "markup": {
            "$ref": "#/components/schemas/OperationMarkup"
          }
        },
        "type": "object",
        "required": [
          "id",
          "source_id",
          "source_name",
          "counterparty_name",
          "purpose",
          "amount_doc",
          "category",
          "date",
          "markup_mode_code",
          "markup"
        ],
        "title": "Operation"
      },
      "OperationCategory": {
        "type": "string",
        "enum": [
          "debet",
          "credit"
        ],
        "title": "OperationCategory"
      },
      "OperationCreditDescription": {
        "type": "string",
        "enum": [
          "Возврат покупателю",
          "Оплата поставщику",
          "Уплата налога",
          "Расчеты по кредитам и займам",
          "Возврат займа контрагенту",
          "Возврат кредита банку",
          "Выдача займа контрагенту",
          "Прочие расчеты с контрагентами",
          "Перевод на другой счет организации",
          "Снятие наличных",
          "Перечисление подотчетному лицу",
          "Перечисление заработной платы по ведомостям",
          "Перечисление заработной платы работнику",
          "Перечисление сотруднику по договору подряда",
          "Перечисление депонированной заработной платы",
          "Перечисление дивидендов",
          "Выдача займа работнику",
          "Личные средства предпринимателя",
          "Прочее списание",
          "Комиссия банка",
          "Уплата налога за третьих лиц"
        ],
        "title": "OperationCreditDescription"
      },
      "OperationDebitDescription": {
        "type": "string",
        "enum": [
          "Оплата от покупателя",
          "Возврат от поставщика",
          "Расчеты по кредитам и займам",
          "Получение займа от контрагента",
          "Получение кредита в банке",
          "Возврат займа контрагентом",
          "Прочие расчеты с контрагентами",
          "Оплата от факторинговой компании",
          "Перевод с другого счета",
          "Взнос наличными",
          "Инкассация",
          "Приобретение иностранной валюты",
          "Поступления от продажи иностранной валюты",
          "Поступления от продаж по платежным картам и банковским кредитам",
          "Возврат займа работником",
          "Личные средства предпринимателя",
          "Прочее поступление"
        ],
        "title": "OperationDebitDescription"
      },
      "OperationMarkup": {
        "properties": {
          "operation_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OperationType"
              }
            ],
            "description": "Вид операции. \n1 - доход. 2 - не влияет на налоговую базу. 3 - возврат покупателю. 4 - уплата налогов/взносов."
          },
          "amount": {
            "type": "number",
            "title": "Amount",
            "description": "Сумма, участвующая в разметке операции"
          },
          "commission": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Commission",
            "description": "Сумма комиссии"
          },
          "description": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OperationDebitDescription"
              },
              {
                "$ref": "#/components/schemas/OperationCreditDescription"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "operation_type",
          "amount"
        ],
        "title": "OperationMarkup",
        "example": {
          "amount": 500.9,
          "operation_type": 2
        }
      },
      "OperationType": {
        "type": "integer",
        "enum": [
          1,
          2,
          3,
          4
        ],
        "title": "OperationType"
      },
      "OperationsPagination": {
        "properties": {
          "page_number": {
            "type": "integer",
            "title": "Page Number",
            "description": "Номер страницы"
          },
          "row_count": {
            "type": "integer",
            "title": "Row Count",
            "description": "Количество записей на странице"
          },
          "request_id": {
            "type": "string",
            "format": "uuid",
            "title": "Request Id",
            "description": "Уникальный ID операции. Необходим для корректной работы фильтрации. Остается неизменным при пагинации, сбрасывается при изменении фильтров"
          }
        },
        "type": "object",
        "required": [
          "page_number",
          "row_count",
          "request_id"
        ],
        "title": "OperationsPagination"
      },
      "OperationsResponse": {
        "properties": {
          "operations": {
            "items": {
              "$ref": "#/components/schemas/Operation"
            },
            "type": "array",
            "title": "Operations",
            "description": "Список операций"
          },
          "pages_count": {
            "type": "integer",
            "title": "Pages Count",
            "description": "Количество страниц"
          }
        },
        "type": "object",
        "required": [
          "operations",
          "pages_count"
        ],
        "title": "OperationsResponse",
        "example": {
          "operations": [
            {
              "account_number": "40702810845370000004",
              "amount_doc": 1000.01,
              "category": "debet",
              "counterparty_name": "Некоммерческая организация Потребительское общество взаимного страхования с \"Очень длинным названием\"",
              "currency_code": "RUB",
              "date": "2022-04-13",
              "doc_number": "239",
              "id": "0d8fce4c-8362-11ed-a1eb-0242ac120002",
              "markup": {
                "amount": 900.01,
                "description": "Оплата поставщику",
                "operation_type": 2
              },
              "markup_mode_code": 1,
              "purpose": "Перевод денег на счет"
            }
          ],
          "pages_count": 7
        }
      },
      "PaymentOrder": {
        "properties": {
          "uip": {
            "type": "string",
            "title": "Uip",
            "description": "УИН/УИП",
            "default": "0"
          },
          "amount": {
            "type": "number",
            "title": "Amount",
            "description": "Сумма операции"
          },
          "purpose": {
            "type": "string",
            "title": "Purpose",
            "description": "Назначение платежа"
          },
          "payer_inn": {
            "type": "string",
            "title": "Payer Inn",
            "description": "ИНН плательщика"
          },
          "payer_kpp": {
            "type": "string",
            "title": "Payer Kpp",
            "description": "КПП плательщика",
            "default": "0"
          },
          "payer_account": {
            "type": "string",
            "title": "Payer Account",
            "description": "Номер счета плательщика"
          },
          "payer_name": {
            "type": "string",
            "title": "Payer Name",
            "description": "Наименование плательщика"
          },
          "payer_status": {
            "type": "string",
            "title": "Payer Status",
            "description": "Статус плательщика",
            "default": "01"
          },
          "receiver_inn": {
            "type": "string",
            "title": "Receiver Inn",
            "description": "ИНН получателя",
            "default": "7727406020"
          },
          "receiver_kpp": {
            "type": "string",
            "title": "Receiver Kpp",
            "description": "КПП получателя",
            "default": "770801001"
          },
          "receiver_bank_name": {
            "type": "string",
            "title": "Receiver Bank Name",
            "description": "Наименование банка получателя",
            "default": "ОТДЕЛЕНИЕ ТУЛА БАНКА РОССИИ//УФК по Тульской области, г Тула"
          },
          "receiver_bank_bik": {
            "type": "string",
            "title": "Receiver Bank Bik",
            "description": "БИК банка получателя",
            "default": "017003983"
          },
          "receiver_cor_account": {
            "type": "string",
            "title": "Receiver Cor Account",
            "description": "Корр. счет банка получателя",
            "default": "40102810445370000059"
          },
          "receiver_name": {
            "type": "string",
            "title": "Receiver Name",
            "description": "Наименование получателя",
            "default": "Казначейство России (ФНС России)"
          },
          "receiver_account": {
            "type": "string",
            "title": "Receiver Account",
            "description": "Номер счета получателя",
            "default": "03100643000000018500"
          },
          "kbk": {
            "type": "string",
            "title": "Kbk",
            "description": "Код бюджетной классификации",
            "default": "18201061201010000510"
          },
          "oktmo": {
            "type": "string",
            "title": "Oktmo",
            "description": "ОКТМО",
            "default": "0"
          },
          "payment_purpose": {
            "type": "string",
            "title": "Payment Purpose",
            "description": "Основание платежа",
            "default": "0"
          },
          "payment_period": {
            "type": "string",
            "title": "Payment Period",
            "description": "Налоговый период",
            "default": "0"
          },
          "document_number": {
            "type": "string",
            "title": "Document Number",
            "description": "Номер документа",
            "default": "0"
          },
          "document_date": {
            "type": "string",
            "title": "Document Date",
            "description": "Дата налогового документа",
            "default": "0"
          }
        },
        "type": "object",
        "required": [
          "amount",
          "purpose",
          "payer_inn",
          "payer_account",
          "payer_name"
        ],
        "title": "PaymentOrder"
      },
      "RateReasonType": {
        "type": "string",
        "enum": [
          "nothing",
          "crimea",
          "tax_holidays"
        ],
        "title": "RateReasonType"
      },
      "ReportFormat": {
        "type": "string",
        "enum": [
          "pdf",
          "xml"
        ],
        "title": "ReportFormat"
      },
      "ReportInfo": {
        "properties": {
          "code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Code",
            "description": "Номер отчета в разделе  “Уведомления об исчисленных суммах налога”"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaskReportType"
              }
            ],
            "description": "Тип отчета. Возможные значения: notice_1_kv - Уведомление за 1 квартал. notice_2_kv - Уведомление за 2 квартал. notice_3_kv - Уведомление за 3 квартал. declaration - Декларация. "
          },
          "report_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReportStatus"
              }
            ],
            "description": "Новый статус отчета. Возможные значения: 0 - отчет НЕ сформирован. 1 - отчет сформирован и передан клиенту. 2 - отчет принят ФНС (через ЭЦП). 3 - отчет НЕ принят ФНС. 4 - отчет принят ФНС (сдал самостоятельно)."
          },
          "date_update": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Update",
            "description": "Дата последнего присвоения статуса"
          },
          "amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Amount",
            "description": "Сумма из “Уведомления об исчисленных суммах налога”"
          }
        },
        "type": "object",
        "required": [
          "type",
          "report_status"
        ],
        "title": "ReportInfo"
      },
      "ReportPeriodType": {
        "type": "integer",
        "enum": [
          1,
          2,
          3,
          4,
          6,
          9,
          0
        ],
        "title": "ReportPeriodType"
      },
      "ReportResponse": {
        "properties": {
          "report_code": {
            "type": "string",
            "title": "Report Code",
            "description": "ID сформированного уведомления / декларации"
          }
        },
        "type": "object",
        "required": [
          "report_code"
        ],
        "title": "ReportResponse"
      },
      "ReportStatus": {
        "type": "integer",
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "title": "ReportStatus"
      },
      "ReportType": {
        "type": "integer",
        "enum": [
          1,
          2,
          3
        ],
        "title": "ReportType"
      },
      "ReportsInfoResponse": {
        "properties": {
          "reports_info": {
            "items": {
              "$ref": "#/components/schemas/ReportInfo"
            },
            "type": "array",
            "title": "Reports Info",
            "description": "Информация об уведомлениях и декларации за текущий год"
          }
        },
        "type": "object",
        "required": [
          "reports_info"
        ],
        "title": "ReportsInfoResponse",
        "example": {
          "reports_info": [
            {
              "amount": 0,
              "code": "000000011",
              "date_update": "2023-04-21",
              "report_status": 3,
              "type": "notice_1_kv"
            },
            {
              "amount": 79874,
              "code": "000000015",
              "date_update": "2023-07-23",
              "report_status": 3,
              "type": "notice_2_kv"
            },
            {
              "amount": -12754,
              "code": "000000020",
              "date_update": "2023-10-29",
              "report_status": 1,
              "type": "notice_3_kv"
            },
            {
              "report_status": 0,
              "type": "declaration"
            }
          ]
        }
      },
      "RequestState": {
        "type": "string",
        "enum": [
          "in_progress",
          "completed",
          "failed"
        ],
        "title": "RequestState"
      },
      "ResultInfo": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "source_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Id"
          },
          "status": {
            "$ref": "#/components/schemas/RequestState"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "message_key": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message Key"
          },
          "link": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link"
          }
        },
        "type": "object",
        "required": [
          "id",
          "status"
        ],
        "title": "ResultInfo"
      },
      "SNOReference": {
        "properties": {
          "title": {
            "type": "string",
            "title": "Title",
            "description": "Название СНО"
          },
          "key": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TaxSystemType"
              },
              {
                "type": "null"
              }
            ],
            "description": "Ключ TaxSystemType."
          },
          "range_start": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Range Start",
            "description": "Начало диапазона процентов СНО"
          },
          "range_end": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Range End",
            "description": "Конец диапазона процентов СНО"
          }
        },
        "type": "object",
        "required": [
          "title",
          "key",
          "range_start",
          "range_end"
        ],
        "title": "SNOReference"
      },
      "SNOReferencesResponse": {
        "properties": {
          "references": {
            "items": {
              "$ref": "#/components/schemas/SNOReference"
            },
            "type": "array",
            "title": "References",
            "description": "Список СНО"
          }
        },
        "type": "object",
        "required": [
          "references"
        ],
        "title": "SNOReferencesResponse",
        "example": {
          "references": [
            {
              "key": "usn_d",
              "range_end": 6,
              "range_start": 0,
              "title": "УСН «Доходы»"
            },
            {
              "key": "usn_d_r",
              "range_end": 15,
              "range_start": 0,
              "title": "УСН «Доходы минус расходы»"
            },
            {
              "key": "eshn",
              "title": "Единый сельскохозяйственный налог (ЕСХН)"
            },
            {
              "key": "patent",
              "title": "ПСН (Патентная система налогообложения)"
            },
            {
              "key": "osn",
              "title": "ОСНО (Основная система налогообложения)"
            }
          ]
        }
      },
      "Source": {
        "properties": {
          "id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Id",
            "description": "ID источника данных. Отсутствует при state = [in_progress, failed]"
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SourceType"
              }
            ],
            "description": "Тип источника. Возможные значения: "
          },
          "name": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/OFDSource"
              },
              {
                "$ref": "#/components/schemas/MarketplaceName"
              },
              {
                "type": "string"
              }
            ],
            "title": "Name",
            "description": "Наименование источника.  "
          },
          "short_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Short Name",
            "description": "Коротокое название источника. Пока реализовано только для банков."
          },
          "sub_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Sub Name",
            "description": "Дополнительное наименование. Если type = 1 - номер счета, если type = 3 и name = Ozon - клиентский идентификатор Озон."
          },
          "bank_bik": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Bank Bik",
            "description": "БИК банка"
          },
          "last_info": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Info",
            "description": "Дата последней операции по источнику"
          },
          "disable_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Disable Date",
            "description": "Дата закрытия источника."
          },
          "is_integrated": {
            "type": "boolean",
            "title": "Is Integrated",
            "description": "Признак интегрированного источника"
          },
          "is_main": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Main",
            "description": "Признак основного источника (банковского счета)"
          },
          "state": {
            "allOf": [
              {
                "$ref": "#/components/schemas/RequestState"
              }
            ],
            "description": "Статус подключения источника. Список возможных значений: in_progress - в процессе. failed - ошибка. completed - завершен (источники в данном статусе не идут в выдачу)."
          },
          "reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Reason",
            "description": "Описание статуса подключения источника. Может содержать результат выполнения в случае неудачи."
          },
          "link": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Link",
            "description": "Ссылка на продолжение интеграции, является отдельным промежуточным результатом добавления интегрируемого источника."
          }
        },
        "type": "object",
        "required": [
          "type",
          "name",
          "is_integrated"
        ],
        "title": "Source"
      },
      "SourceType": {
        "type": "string",
        "enum": [
          "account",
          "ofd",
          "marketplace",
          "hand"
        ],
        "title": "SourceType"
      },
      "SourcesInfo": {
        "properties": {
          "sources": {
            "items": {
              "$ref": "#/components/schemas/Source"
            },
            "type": "array",
            "title": "Sources",
            "description": "Список источников"
          },
          "comment": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Comment",
            "description": "Комментарий"
          }
        },
        "type": "object",
        "title": "SourcesInfo",
        "example": {
          "clients": [
            {
              "accounts": [
                {
                  "account_number": "40817810570000123456",
                  "bank_bik": "044525092",
                  "bank_name": "АО КБ Модульбанк",
                  "last_operation": "2023-09-06"
                }
              ],
              "firstname": "Василий",
              "fns": {
                "code": "0550",
                "description": "Межрайонная инспекция ФНС России № 4 по Республике Дагестан"
              },
              "fns_reg_date": "2020-09-17",
              "inn": "027710159721",
              "lastname": "Пупкин",
              "marketplaces": [
                {
                  "marketplace_name": "Озон",
                  "marketplace_update": "2023-10-01"
                }
              ],
              "patronymic": "Петрович",
              "tax": {
                "oktmo": "12345678",
                "tax_date_begin": "2022-01-01",
                "tax_rate": 6,
                "tax_system": "Usn6"
              }
            }
          ]
        }
      },
      "TaskInfo": {
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaskType"
              }
            ],
            "description": "Тип задачи. Возможные значения: usn - Налог УСН. fixed_fees - Фиксированные взносы. income_percentage - 1% с дохода. report - отчетность. other - иные уведомления."
          },
          "year": {
            "type": "integer",
            "title": "Year",
            "description": "Год расчета"
          },
          "task_code": {
            "type": "string",
            "title": "Task Code",
            "description": "Кодовое обозначение задачи"
          },
          "title": {
            "type": "string",
            "title": "Title",
            "description": "Заголовок задачи"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Описание задачи"
          },
          "date_begin": {
            "type": "string",
            "format": "date",
            "title": "Date Begin",
            "description": "Дата начала демонстрации задачи"
          },
          "due_date": {
            "type": "string",
            "format": "date",
            "title": "Due Date",
            "description": "Крайник срок действия по задаче (крайний срок уплаты/сдачи отчетности)"
          },
          "tax_base": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tax Base",
            "description": "Налоговая база"
          },
          "tax_base_now": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tax Base Now",
            "description": "Налоговая база (текущий расчет)"
          },
          "due_amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Due Amount",
            "description": "Сумма к уплате по данной задаче"
          },
          "accrued_amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accrued Amount",
            "description": "Сумма “начислено всего” по данной задаче"
          },
          "accrued_amount_now": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accrued Amount Now",
            "description": "Сумма “начислено всего” согласно текущему расчету"
          },
          "accrued_amount_kv": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Accrued Amount Kv",
            "description": "Исчислен налог поквартально"
          },
          "paid_amount": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Paid Amount",
            "description": "Сумма “уплачено ранее” по данной задаче"
          },
          "report_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Report Code",
            "description": "ID сформированного уведомления / декларации"
          },
          "report_update": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Report Update",
            "description": "Дата последнего формирования  уведомления / декларации"
          },
          "purpose": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Purpose",
            "description": "Назначение платежа"
          }
        },
        "type": "object",
        "required": [
          "type",
          "year",
          "task_code",
          "title",
          "description",
          "date_begin",
          "due_date"
        ],
        "title": "TaskInfo"
      },
      "TaskReference": {
        "properties": {
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/TaskType"
              }
            ],
            "description": "Тип задачи. Возможные значения: usn - Налог УСН. fixed_fees - фиксированные взносы. income_percentage - 1% c дохода. report  - отчетность. other - иные уведомления"
          },
          "code": {
            "type": "string",
            "title": "Code",
            "description": "Кодовое обозначение задачи"
          },
          "title": {
            "type": "string",
            "title": "Title",
            "description": "Заголовок задачи"
          },
          "description": {
            "type": "string",
            "title": "Description",
            "description": "Описание задачи"
          },
          "date_begin": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date Begin",
            "description": "Дата начала демонстрации задачи. Формат - MM-DD."
          },
          "date_end": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Date End",
            "description": "Дата окончания демонстрации задачи. Формат - MM-DD."
          },
          "due_dates": {
            "items": {
              "$ref": "#/components/schemas/DueDate"
            },
            "type": "array",
            "title": "Due Dates",
            "description": "Крайний срок действия по задачи (крайний срок уплаты / сдачи отчетности)"
          },
          "source_of_amount": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Source Of Amount",
            "description": "Источник суммы к уплате по данной задаче"
          },
          "purpose": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Purpose",
            "description": "Назначение платежа (используется для создания платежного поручения)"
          }
        },
        "type": "object",
        "required": [
          "type",
          "code",
          "title",
          "description",
          "due_dates"
        ],
        "title": "TaskReference"
      },
      "TaskReferencesResponse": {
        "properties": {
          "tasks": {
            "items": {
              "$ref": "#/components/schemas/TaskReference"
            },
            "type": "array",
            "title": "Tasks",
            "description": "Задачи по  уплате налогов"
          }
        },
        "type": "object",
        "required": [
          "tasks"
        ],
        "title": "TaskReferencesResponse",
        "example": {
          "tasks": [
            {
              "amount": "ЕНП до 28 числа_9 месяцев",
              "code": "ZN3",
              "date_begin": "01.10",
              "date_end": "31.12",
              "description": "Уплата налога УСН за 9 месяцев",
              "due_dates": [
                {
                  "date": "2023-10-30",
                  "year": 2023
                },
                {
                  "date": "2024-10-28",
                  "year": 2024
                },
                {
                  "date": "2025-10-28",
                  "year": 2025
                }
              ],
              "purpose": "Единый налоговый платеж по сроку *due_date*",
              "title": "УСН за 9 месяцев",
              "type": "usn"
            },
            {
              "amount": "ЕНП до 31.12_год",
              "code": "SV",
              "date_begin": "01.01",
              "date_end": "31.12",
              "description": "Уплата страхового взноса за ИП в совокупном фиксированном размере за год",
              "due_dates": [
                {
                  "date": "2024-01-09",
                  "year": 2023
                },
                {
                  "date": "2025-01-08",
                  "year": 2024
                },
                {
                  "date": "2025-12-31",
                  "year": 2025
                }
              ],
              "purpose": "Единый налоговый платеж по сроку *due_date*",
              "title": "Фиксированные взносы",
              "type": "fixed_fees"
            },
            {
              "code": "ZDP",
              "date_begin": "01.01",
              "description": "Подготовка декларации по УСН за прошедший год",
              "due_dates": [
                {
                  "date": "2024-04-25",
                  "year": 2023
                },
                {
                  "date": "2025-04-25",
                  "year": 2024
                },
                {
                  "date": "2026-04-27",
                  "year": 2025
                }
              ],
              "title": "Подготовить декларацию",
              "type": "usn"
            },
            {
              "amount": "Исчислен налог_9 месяцев",
              "code": "OUV3",
              "description": "Отправка уведомления по ЕНП за 3-ий квартал",
              "due_dates": [
                {
                  "date": "2023-10-25",
                  "year": 2023
                },
                {
                  "date": "2024-10-25",
                  "year": 2024
                },
                {
                  "date": "2025-10-27",
                  "year": 2025
                }
              ],
              "title": "Отправить уведомление за 3-ий квартал",
              "type": "usn"
            }
          ]
        }
      },
      "TaskReportType": {
        "type": "string",
        "enum": [
          "notice_1_kv",
          "notice_2_kv",
          "notice_3_kv",
          "declaration"
        ],
        "title": "TaskReportType"
      },
      "TaskResponse": {
        "properties": {
          "tasks": {
            "items": {
              "$ref": "#/components/schemas/TaskInfo"
            },
            "type": "array",
            "title": "Tasks",
            "description": "Задачи по уплате налогов. Задачи в списке упорядочены по полю due_date."
          },
          "is_relevant": {
            "type": "boolean",
            "title": "Is Relevant",
            "description": "Актуальность расчета налогов"
          }
        },
        "type": "object",
        "required": [
          "tasks",
          "is_relevant"
        ],
        "title": "TaskResponse",
        "example": {
          "tasks": [
            {
              "accrued_amount": 94327,
              "date_begin": "2024-01-01",
              "description": "Уплата налога по упрощенной системе налогообложения",
              "due_amount": 34327,
              "due_date": "2024-04-28",
              "paid_amount": 60000,
              "purpose": "Единый налоговый платеж по сроку 28 апреля 2024 г.",
              "task_code": "ZN4",
              "title": "Налог УСН за 2023 год",
              "type": "usn",
              "year": 2023
            },
            {
              "accrued_amount": 33667.56,
              "date_begin": "2024-01-01",
              "description": "Уплата страхового взноса с дохода свыше 300 000 ₽",
              "due_amount": 23667.46,
              "due_date": "2024-07-01",
              "paid_amount": 10000.1,
              "purpose": "Единый налоговый платеж по сроку 1 июля 2024 г.",
              "task_code": "ZV%4",
              "title": "1% с дохода за 2023 год",
              "type": "income_percentage",
              "year": 2023
            },
            {
              "date_begin": "2024-01-01",
              "description": "Сдача налоговой декларации по упрощенной системе налогообложения",
              "due_date": "2024-04-25",
              "task_code": "ZDP",
              "title": "Декларация УСН за 2023 год",
              "type": "report",
              "year": 2024
            },
            {
              "accrued_amount": -12508,
              "date_begin": "2023-10-01",
              "description": "Сдача уведомления об исчисленных авансовых платежах по налогу",
              "due_date": "2023-10-25",
              "task_code": "UV3",
              "title": "Уведомление по УСН за III кв 2023 года ",
              "type": "report",
              "year": 2023
            },
            {
              "accrued_amount": 77017,
              "date_begin": "2023-07-01",
              "description": "Сдача уведомления об исчисленных авансовых платежах по налогу",
              "due_date": "2023-07-25",
              "task_code": "UV2",
              "title": "Уведомление по УСН за II кв 2023 года ",
              "type": "report",
              "year": 2023
            },
            {
              "accrued_amount": 1409,
              "date_begin": "2023-04-01",
              "description": "Сдача уведомления об исчисленных авансовых платежах по налогу",
              "due_date": "2023-04-25",
              "report_code": "00024",
              "task_code": "UV1",
              "title": "Уведомление по УСН за I кв 2023 года ",
              "type": "report",
              "year": 2023
            },
            {
              "accrued_amount": 45842,
              "date_begin": "2023-01-01",
              "description": "Уплата страхового взноса за ИП в совокупном фиксированном размере",
              "due_amount": 40000,
              "due_date": "2024-01-09",
              "paid_amount": 5842,
              "purpose": "Единый налоговый платеж по сроку 9 января 2024 г.",
              "task_code": "SV",
              "title": "Фиксированные взносы за 2023 год",
              "type": "fixed_fees",
              "year": 2023
            },
            {
              "accrued_amount": 49500,
              "date_begin": "2024-01-01",
              "description": "Уплата страхового взноса за ИП в совокупном фиксированном размере",
              "due_amount": 49500,
              "due_date": "2025-01-08",
              "paid_amount": 0,
              "purpose": "Единый налоговый платеж по сроку 8 января 2025 г.",
              "task_code": "SV",
              "title": "Фиксированные взносы за 2024 год",
              "type": "fixed_fees",
              "year": 2024
            }
          ]
        }
      },
      "TaskType": {
        "type": "string",
        "enum": [
          "usn",
          "fixed_fees",
          "income_percentage",
          "report",
          "other"
        ],
        "title": "TaskType"
      },
      "TaxCalculationResponse": {
        "properties": {
          "is_relevant": {
            "type": "boolean",
            "title": "Is Relevant",
            "description": "Актуальность расчета налогов. true - если не стоит в очереди на перерасчет. false - если стоит в очереди на перерасчет."
          },
          "recalculation_date": {
            "type": "string",
            "format": "date-time",
            "title": "Recalculation Date",
            "description": "Дата и время последнего перерасчета налогов"
          },
          "usn_taxes": {
            "allOf": [
              {
                "$ref": "#/components/schemas/USNTaxes"
              }
            ],
            "description": "Налоги УСН"
          },
          "contributions": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ContributionsInfo"
              }
            ],
            "description": "Взносы"
          },
          "ens_balance": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ENSBalanceInfo"
              }
            ],
            "description": "Сальдо ЕНС"
          }
        },
        "type": "object",
        "required": [
          "is_relevant",
          "recalculation_date",
          "usn_taxes",
          "contributions",
          "ens_balance"
        ],
        "title": "TaxCalculationResponse",
        "example": {
          "contributions": {
            "fixed_fees": {
              "accrued_ff": 41003.12,
              "due_date_ff": "2024-01-09",
              "due_ff": 38427.62,
              "paid_ff": 2575.5
            },
            "income_percentage": {
              "accrued_ip": 25575.28,
              "due_date_ip": "2024-07-01",
              "due_ip": 25575.28,
              "paid_ip": 0,
              "period_ip": 9
            }
          },
          "ens_balance": {
            "closing_balance": 0,
            "opening_balance": 2000
          },
          "is_relevant": true,
          "recalculation_date": "2023-12-04T09:02:29.604000",
          "usn_taxes": {
            "notices": {
              "usn_1_kv": 0,
              "usn_2_kv": 79874,
              "usn_3_kv": -12754,
              "usn_4_kv": 3000
            },
            "tax_rate": 6,
            "usn_0": {
              "accrued_tax": 70120,
              "deductions": 104932,
              "due_date": "2024-04-29",
              "due_tax": 0,
              "paid_tax": 70120,
              "tax_base": 2917528
            },
            "usn_1": {
              "accrued_tax": 0,
              "deductions": 45373,
              "due_date": "2023-04-28",
              "due_tax": 0,
              "paid_tax": 0,
              "tax_base": 756221
            },
            "usn_6": {
              "accrued_tax": 79874,
              "deductions": 61578,
              "due_date": "2023-07-28",
              "due_tax": 7178.5,
              "paid_tax": 72695.5,
              "tax_base": 2357528
            },
            "usn_9": {
              "accrued_tax": 67120,
              "deductions": 104332,
              "due_date": "2023-10-30",
              "due_tax": 0,
              "paid_tax": 67120,
              "tax_base": 2857528
            }
          }
        }
      },
      "TaxLimit": {
        "properties": {
          "year": {
            "type": "integer",
            "title": "Year",
            "description": "Год, за который установлены лимиты"
          },
          "fixed_fees": {
            "type": "number",
            "title": "Fixed Fees",
            "description": "Фиксированные взносы за ИП"
          },
          "income_percentage": {
            "type": "number",
            "title": "Income Percentage",
            "description": "Предельная величина взносов 1% с дохода"
          },
          "rate_increase": {
            "type": "number",
            "title": "Rate Increase",
            "description": "Сумма лимита на повышение ставки УСН"
          },
          "max_income": {
            "type": "number",
            "title": "Max Income",
            "description": "Сумма максимального дохода УСН"
          }
        },
        "type": "object",
        "required": [
          "year",
          "fixed_fees",
          "income_percentage",
          "rate_increase",
          "max_income"
        ],
        "title": "TaxLimit"
      },
      "TaxLimitsResponse": {
        "properties": {
          "limits": {
            "items": {
              "$ref": "#/components/schemas/TaxLimit"
            },
            "type": "array",
            "title": "Limits"
          }
        },
        "type": "object",
        "required": [
          "limits"
        ],
        "title": "TaxLimitsResponse"
      },
      "TaxSystemType": {
        "type": "string",
        "enum": [
          "usn_d",
          "usn_d_r",
          "osn",
          "eshn",
          "patent"
        ],
        "title": "TaxSystemType"
      },
      "TaxType": {
        "type": "integer",
        "enum": [
          1,
          2,
          3,
          4
        ],
        "title": "TaxType"
      },
      "Token": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "token_type"
        ],
        "title": "Token"
      },
      "USNTaxInfo": {
        "properties": {
          "tax_base": {
            "type": "number",
            "title": "Tax Base",
            "description": "Налоговая база за полугодие"
          },
          "deductions": {
            "type": "number",
            "title": "Deductions",
            "description": "Вычеты за 1 квартал"
          },
          "accrued_tax": {
            "type": "number",
            "title": "Accrued Tax",
            "description": "Исчислен налог УСН"
          },
          "paid_tax": {
            "type": "number",
            "title": "Paid Tax",
            "description": "Уплачен налог УСН"
          },
          "due_tax": {
            "type": "number",
            "title": "Due Tax",
            "description": "Налог УСН к уплате"
          },
          "due_date": {
            "type": "string",
            "format": "date",
            "title": "Due Date",
            "description": "Дата уплаты налога. В зависимости от accrueds_period: 1/4 - YYYY-04-28. 2 - YYYY-07-28. 3 - YYYY-10-28"
          }
        },
        "type": "object",
        "required": [
          "tax_base",
          "deductions",
          "accrued_tax",
          "paid_tax",
          "due_tax",
          "due_date"
        ],
        "title": "USNTaxInfo"
      },
      "USNTaxes": {
        "properties": {
          "tax_rate": {
            "type": "integer",
            "title": "Tax Rate",
            "description": "Ставка налога"
          },
          "notices": {
            "allOf": [
              {
                "$ref": "#/components/schemas/NoticeInfo"
              }
            ],
            "description": "Уведомления по УСН"
          },
          "usn_1": {
            "allOf": [
              {
                "$ref": "#/components/schemas/USNTaxInfo"
              }
            ],
            "description": "УСН за 1 квартал"
          },
          "usn_6": {
            "allOf": [
              {
                "$ref": "#/components/schemas/USNTaxInfo"
              }
            ],
            "description": "УСН за полугодие"
          },
          "usn_9": {
            "allOf": [
              {
                "$ref": "#/components/schemas/USNTaxInfo"
              }
            ],
            "description": "УСН за 9 месяцев"
          },
          "usn_0": {
            "allOf": [
              {
                "$ref": "#/components/schemas/USNTaxInfo"
              }
            ],
            "description": "УСН за год"
          }
        },
        "type": "object",
        "required": [
          "tax_rate",
          "notices",
          "usn_1",
          "usn_6",
          "usn_9",
          "usn_0"
        ],
        "title": "USNTaxes"
      },
      "UpdateOperationMarkup": {
        "properties": {
          "operation_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/OperationType"
              }
            ],
            "description": "Вид операции. \n1 - доход. 2 - не влияет на налоговую базу. 3 - возврат покупателю. 4 - уплата налогов/взносов."
          },
          "amount": {
            "type": "number",
            "title": "Amount",
            "description": "Сумма, участвующая в разметке операции"
          }
        },
        "type": "object",
        "required": [
          "operation_type",
          "amount"
        ],
        "title": "UpdateOperationMarkup"
      },
      "UpdateReportRequest": {
        "properties": {
          "report_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReportType"
              }
            ],
            "description": "Тип запрашиваемого отчета. Возможные значения: 1 - КУДиР. 2 - Уведомления об исчисленных авансовых платежах по УСН. 3 - Налоговая декларация УСН. "
          },
          "period_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ReportPeriodType"
              }
            ],
            "description": "Тип налогового периода. Возможные значения: 1 - 1 квартал. 2 - 2 квартал. 3 - 3 квартал. 4 - 4 квартал. 6 - полугодие. 9 - 9 месяцев. 0 - весь год. Для Уведомления возможен выбор только 1-3 кварталов. Для декларации только 0 (весь год)"
          },
          "period_year": {
            "type": "integer",
            "title": "Period Year",
            "description": "Год налогового периода"
          },
          "report_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Report Code",
            "description": "Код отчета в БРН. Передается обязательно, если по отчету ранее формировались документы (если по этому отчету в методе GET-/reports_info возвращается поле code). Не передается, если отчета НЕТ в разделе “Уведомления об исчисленных суммах налога”"
          },
          "report_status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/UpdateRepostStatus"
              }
            ],
            "description": "Новый статус отчета. Возможные значения: 2 - отчет принят в ФНС (через ЭЦП). 3 - отчет не принят ФНС. 4 - отчет принят ФНС (сдал самостоятельно). "
          }
        },
        "type": "object",
        "required": [
          "report_type",
          "period_type",
          "period_year",
          "report_status"
        ],
        "title": "UpdateReportRequest",
        "example": {
          "period_type": 1,
          "period_year": 2023,
          "report_code": "000000010",
          "report_status": 2,
          "report_type": 2
        }
      },
      "UpdateRepostStatus": {
        "type": "integer",
        "enum": [
          2,
          3,
          4
        ],
        "title": "UpdateRepostStatus"
      },
      "User": {
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "title": "Id"
          },
          "full_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Full Name",
            "description": "Полное имя"
          },
          "lastname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Lastname",
            "description": "Фамилия"
          },
          "firstname": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Firstname",
            "description": "Имя"
          },
          "patronymic": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patronymic",
            "description": "Отчество"
          },
          "inn": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Inn",
            "description": "ИНН пользователя"
          },
          "tax_system": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tax System",
            "description": "Применяемая СНО"
          },
          "tax_rate": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tax Rate",
            "description": "Налоговая ставка"
          },
          "rate_reason": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Rate Reason",
            "description": "Обоснование сниженной налоговой ставки"
          },
          "tax_date_begin": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tax Date Begin",
            "description": "Дата начала работы в сервисе"
          },
          "oktmo": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Oktmo",
            "description": "Код ОКТМО"
          },
          "hashed_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Hashed Id",
            "description": "Захэшированный ID пользователя. Необходим для работы с Carrot Quest"
          },
          "fns_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fns Code",
            "description": "Код ИФНС"
          },
          "fns_description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fns Description",
            "description": "Название ИФНС"
          },
          "fns_reg_date": {
            "anyOf": [
              {
                "type": "string",
                "format": "date"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fns Reg Date",
            "description": "Дата регистрации ИП в ФНС"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email",
            "description": "Электронная почта пользователя"
          },
          "phone_number": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Number",
            "description": "Номер телефона пользователя"
          },
          "is_lead": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Lead",
            "description": "Является ли пользователь лидом",
            "default": false
          },
          "is_disabled": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Disabled",
            "description": "Отключена ли бухгалтерия у пользователя",
            "default": false
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Дата создания пользователя"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "description": "Дата последнего обновления"
          }
        },
        "type": "object",
        "required": [
          "id",
          "created_at",
          "updated_at"
        ],
        "title": "User"
      },
      "UserInfoBanner": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "banner_type": {
            "$ref": "#/components/schemas/BannerType"
          },
          "title": {
            "type": "string",
            "title": "Title"
          },
          "description": {
            "type": "string",
            "title": "Description"
          }
        },
        "type": "object",
        "required": [
          "id",
          "banner_type",
          "title",
          "description"
        ],
        "title": "UserInfoBanner"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    },
    "securitySchemes": {
      "OAuth2PasswordBearer": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "auth"
          }
        }
      }
    }
  }
}